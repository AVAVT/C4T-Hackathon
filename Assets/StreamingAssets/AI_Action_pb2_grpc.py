# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import AI_Action_pb2 as AI__Action__pb2


class AIServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ReturnAIResponse = channel.unary_unary(
        '/AIService/ReturnAIResponse',
        request_serializer=AI__Action__pb2.AIRequest.SerializeToString,
        response_deserializer=AI__Action__pb2.AIResponse.FromString,
        )
    self.ShutdownServer = channel.unary_unary(
        '/AIService/ShutdownServer',
        request_serializer=AI__Action__pb2.ShutdownRequest.SerializeToString,
        response_deserializer=AI__Action__pb2.ShutdownResponse.FromString,
        )


class AIServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ReturnAIResponse(self, request, context):
    """Get map info then return AI response
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShutdownServer(self, request, context):
    """Request server to shutdown
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AIServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ReturnAIResponse': grpc.unary_unary_rpc_method_handler(
          servicer.ReturnAIResponse,
          request_deserializer=AI__Action__pb2.AIRequest.FromString,
          response_serializer=AI__Action__pb2.AIResponse.SerializeToString,
      ),
      'ShutdownServer': grpc.unary_unary_rpc_method_handler(
          servicer.ShutdownServer,
          request_deserializer=AI__Action__pb2.ShutdownRequest.FromString,
          response_serializer=AI__Action__pb2.ShutdownResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AIService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
