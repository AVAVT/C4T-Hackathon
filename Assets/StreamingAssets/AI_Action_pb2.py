# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: AI_Action.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='AI_Action.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0f\x41I_Action.proto\"(\n\tAIRequest\x12\r\n\x05index\x18\x01 \x01(\x05\x12\x0c\n\x04json\x18\x02 \x01(\t\"\x1c\n\nAIResponse\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\"\x11\n\x0fShutdownRequest\"\"\n\x10ShutdownResponse\x12\x0e\n\x06status\x18\x01 \x01(\t2s\n\tAIService\x12-\n\x10ReturnAIResponse\x12\n.AIRequest\x1a\x0b.AIResponse\"\x00\x12\x37\n\x0eShutdownServer\x12\x10.ShutdownRequest\x1a\x11.ShutdownResponse\"\x00\x62\x06proto3')
)




_AIREQUEST = _descriptor.Descriptor(
  name='AIRequest',
  full_name='AIRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='AIRequest.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='json', full_name='AIRequest.json', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=59,
)


_AIRESPONSE = _descriptor.Descriptor(
  name='AIResponse',
  full_name='AIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='AIResponse.action', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=89,
)


_SHUTDOWNREQUEST = _descriptor.Descriptor(
  name='ShutdownRequest',
  full_name='ShutdownRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=91,
  serialized_end=108,
)


_SHUTDOWNRESPONSE = _descriptor.Descriptor(
  name='ShutdownResponse',
  full_name='ShutdownResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ShutdownResponse.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=144,
)

DESCRIPTOR.message_types_by_name['AIRequest'] = _AIREQUEST
DESCRIPTOR.message_types_by_name['AIResponse'] = _AIRESPONSE
DESCRIPTOR.message_types_by_name['ShutdownRequest'] = _SHUTDOWNREQUEST
DESCRIPTOR.message_types_by_name['ShutdownResponse'] = _SHUTDOWNRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AIRequest = _reflection.GeneratedProtocolMessageType('AIRequest', (_message.Message,), dict(
  DESCRIPTOR = _AIREQUEST,
  __module__ = 'AI_Action_pb2'
  # @@protoc_insertion_point(class_scope:AIRequest)
  ))
_sym_db.RegisterMessage(AIRequest)

AIResponse = _reflection.GeneratedProtocolMessageType('AIResponse', (_message.Message,), dict(
  DESCRIPTOR = _AIRESPONSE,
  __module__ = 'AI_Action_pb2'
  # @@protoc_insertion_point(class_scope:AIResponse)
  ))
_sym_db.RegisterMessage(AIResponse)

ShutdownRequest = _reflection.GeneratedProtocolMessageType('ShutdownRequest', (_message.Message,), dict(
  DESCRIPTOR = _SHUTDOWNREQUEST,
  __module__ = 'AI_Action_pb2'
  # @@protoc_insertion_point(class_scope:ShutdownRequest)
  ))
_sym_db.RegisterMessage(ShutdownRequest)

ShutdownResponse = _reflection.GeneratedProtocolMessageType('ShutdownResponse', (_message.Message,), dict(
  DESCRIPTOR = _SHUTDOWNRESPONSE,
  __module__ = 'AI_Action_pb2'
  # @@protoc_insertion_point(class_scope:ShutdownResponse)
  ))
_sym_db.RegisterMessage(ShutdownResponse)



_AISERVICE = _descriptor.ServiceDescriptor(
  name='AIService',
  full_name='AIService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=146,
  serialized_end=261,
  methods=[
  _descriptor.MethodDescriptor(
    name='ReturnAIResponse',
    full_name='AIService.ReturnAIResponse',
    index=0,
    containing_service=None,
    input_type=_AIREQUEST,
    output_type=_AIRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ShutdownServer',
    full_name='AIService.ShutdownServer',
    index=1,
    containing_service=None,
    input_type=_SHUTDOWNREQUEST,
    output_type=_SHUTDOWNRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AISERVICE)

DESCRIPTOR.services_by_name['AIService'] = _AISERVICE

# @@protoc_insertion_point(module_scope)
