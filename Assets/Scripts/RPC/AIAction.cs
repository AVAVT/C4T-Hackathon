// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AI_Action.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from AI_Action.proto</summary>
public static partial class AIActionReflection {

  #region Descriptor
  /// <summary>File descriptor for AI_Action.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AIActionReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9BSV9BY3Rpb24ucHJvdG8iRQoJQUlSZXF1ZXN0Eg0KBWluZGV4GAEgASgF",
          "EhAKCGdhbWVSdWxlGAIgASgJEhcKD3NlcnZlckdhbWVTdGF0ZRgDIAEoCSIc",
          "CgpBSVJlc3BvbnNlEg4KBmFjdGlvbhgBIAEoCTI6CglBSVNlcnZpY2USLQoQ",
          "UmV0dXJuQUlSZXNwb25zZRIKLkFJUmVxdWVzdBoLLkFJUmVzcG9uc2UiAGIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::AIRequest), global::AIRequest.Parser, new[]{ "Index", "GameRule", "ServerGameState" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AIResponse), global::AIResponse.Parser, new[]{ "Action" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// The request message containing map info
/// </summary>
public sealed partial class AIRequest : pb::IMessage<AIRequest> {
  private static readonly pb::MessageParser<AIRequest> _parser = new pb::MessageParser<AIRequest>(() => new AIRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AIRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AIActionReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIRequest(AIRequest other) : this() {
    index_ = other.index_;
    gameRule_ = other.gameRule_;
    serverGameState_ = other.serverGameState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIRequest Clone() {
    return new AIRequest(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "gameRule" field.</summary>
  public const int GameRuleFieldNumber = 2;
  private string gameRule_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameRule {
    get { return gameRule_; }
    set {
      gameRule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "serverGameState" field.</summary>
  public const int ServerGameStateFieldNumber = 3;
  private string serverGameState_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerGameState {
    get { return serverGameState_; }
    set {
      serverGameState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AIRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AIRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (GameRule != other.GameRule) return false;
    if (ServerGameState != other.ServerGameState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (GameRule.Length != 0) hash ^= GameRule.GetHashCode();
    if (ServerGameState.Length != 0) hash ^= ServerGameState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (GameRule.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GameRule);
    }
    if (ServerGameState.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ServerGameState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (GameRule.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameRule);
    }
    if (ServerGameState.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerGameState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AIRequest other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.GameRule.Length != 0) {
      GameRule = other.GameRule;
    }
    if (other.ServerGameState.Length != 0) {
      ServerGameState = other.ServerGameState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 18: {
          GameRule = input.ReadString();
          break;
        }
        case 26: {
          ServerGameState = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// The response message containing AI action
/// </summary>
public sealed partial class AIResponse : pb::IMessage<AIResponse> {
  private static readonly pb::MessageParser<AIResponse> _parser = new pb::MessageParser<AIResponse>(() => new AIResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AIResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AIActionReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIResponse(AIResponse other) : this() {
    action_ = other.action_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AIResponse Clone() {
    return new AIResponse(this);
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 1;
  private string action_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Action {
    get { return action_; }
    set {
      action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AIResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AIResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Action != other.Action) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Action.Length != 0) hash ^= Action.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Action.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Action);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Action.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AIResponse other) {
    if (other == null) {
      return;
    }
    if (other.Action.Length != 0) {
      Action = other.Action;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Action = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
